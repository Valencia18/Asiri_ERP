@using Helpers
@model Common.Model.PROt02_producto

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>
 






      
    <div class="content-wrapper" >
        <div class="col-lg-12">
            <div class="page-title">
                <div>
                    <h1><i class="fa fa-edit"></i>Edición de Estado de Comprobante</h1>
                    <p>Edición Producto</p>
                </div>
                <div>
                    @CustomHelper.Ruta()
                </div>
            </div>

            <!--*****************REGISTRO DE PACIENTE*******************-->
            <div class="row">
                <div class="col-lg-12">
                    <div class="card">
                        <h3 class="card-title"></h3>
                        <div class="card-body">
                            <form >
                                <div class="cold-lg-12">
                                    <div class="form-group">
                                        <label class="control-label">Nombre de Comprobante</label>
                                        <input class="form-control" type="text" vlaue="Ejemplo" >
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label">Descripcion de Comprobante</label>
                                        <input class="form-control" type="text" vlaue="Ejemplo1" >
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label">Estado</label>
                                        <div class="animated-checkbox">
                                            <label>
                                                <input type="checkbox" disabled checked><span class="label-text">Activo</span>
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
              
                    </div>
                </div>
                <div class="col-md-12" style="text-align: center;">
                    <div class="card">  
                        <div class="card-body">
                            <form class="form-inline">
                                <div class="row">
                                    <div class="col-md-12">
                                        <button class="btn btn-success icon-btn" type="button">
                                            <i class="fa fa-fw fa-lg fa-repeat">
                                            </i>Actualizar</button>&nbsp;&nbsp;&nbsp;
                                        <a class="btn btn-default icon-btn" href="#">
                                            <i class="fa fa-fw fa-lg fa-times-circle"></i>Cancel</a>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>PROt02_producto</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.idProducto)  

        <div class="form-group">
            @Html.LabelFor(model => model.codProducto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.codProducto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.codProducto, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.codBarra, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.codBarra, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.codBarra, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.nombreProductoGenerico, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nombreProductoGenerico, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nombreProductoGenerico, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.nombreProductoComercial, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nombreProductoComercial, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nombreProductoComercial, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.descProducto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.descProducto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.descProducto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.obsvProducto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.obsvProducto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.obsvProducto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.activo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.activo)
                    @Html.ValidationMessageFor(model => model.activo, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        @Html.HiddenFor(x=>x.fecRegistro)
        @Html.HiddenFor(x=>x.fecEliminacion)

        <div class="form-group">
            @Html.LabelFor(model => model.idUsuarioEliminar, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.idUsuarioEliminar, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.idUsuarioEliminar, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.idCategoria, "idCategoria", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("idCategoria", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.idCategoria, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.HiddenFor(x=>x.idMoneda)

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar cambios" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Regresar", "Index")
</div>
